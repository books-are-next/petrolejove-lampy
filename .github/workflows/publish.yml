name: Publish book

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  extract:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: false
          fetch-depth: 0

      - name: Check if there is an EPUB waiting for conversion
        id: epub-exists
        run: echo "::set-output name=result::$(sh epub-exists.sh)"

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Extract version from package.json
        uses: sergeysova/jq-action@v2
        id: extraction-complete
        with:
          cmd: 'jq .extractionComplete epub/params.json'

      - name: Resolve conditions
        if: ${{ steps.epub-exists.outputs.result && steps.extraction-complete.outputs.value != 'true' }}
        id: should-extract
        run: echo "::set-output name=extract::true"

      - name: Install dependencies
        if: ${{ steps.should-extract.outputs.extract == 'true' }}
        run: |
          npm install

      - name: Update EPUB converter to the latest revision
        if: ${{ steps.should-extract.outputs.extract == 'true' }}
        run: "npm install @next-book/epub2nb@latest"

      - name: Convert EPUB
        if: ${{ steps.should-extract.outputs.extract == 'true' }}
        run: npx epub2nb -s epub --gh $GITHUB_REPOSITORY

      - name: Publish conversion UI ðŸš€
        if: ${{ steps.should-extract.outputs.extract == 'true' }}
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: docs
          folder: epub
          target-folder: converter

      - name: Push converted content ðŸš€
        if: ${{ steps.should-extract.outputs.extract == 'true' }}
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: main
          folder: epub/content
          target-folder: content

  publish:
    needs: [extract]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: false
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Check if there is an EPUB waiting for conversion
        id: epub-exists
        run: echo "::set-output name=result::$(sh epub-exists.sh)"

      - name: Install dependencies
        run: |
          npm install

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.81.0"
          extended: true

      - name: Download dart-sass
        if: ${{ steps.should-extract.outputs.extract == 'true' }}
        run: |
          curl -sL https://github.com/sass/dart-sass-embedded/releases/download/1.0.0-beta.12/sass_embedded-1.0.0-beta.12-linux-x64.tar.gz | tar xvz

      - name: Build
        run: |
          export PATH="$PATH:$(realpath sass_embedded)"
          npm run build

      - name: Publish the book ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: docs
          folder: _book
